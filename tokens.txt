3.	(KEYWORD, int) (ID, fibonachi) (SYMBOL, () (KEYWORD, int) (ID, n) (SYMBOL, )) (SYMBOL, {) 
4.	(KEYWORD, if) (SYMBOL, () (ID, n) (SYMBOL, ==) (NUM, 1) (SYMBOL, )) 
5.	(KEYWORD, return) (NUM, 1) (SYMBOL, ;) 
6.	(KEYWORD, endif) 
7.	(KEYWORD, if) (SYMBOL, () (ID, n) (SYMBOL, ==) (NUM, 2) (SYMBOL, )) 
8.	(KEYWORD, return) (NUM, 2) (SYMBOL, ;) 
9.	(KEYWORD, endif) 
10.	(KEYWORD, return) (ID, fibonachi) (SYMBOL, () (ID, n) (SYMBOL, )) (SYMBOL, +) (ID, fibonachi) (SYMBOL, () (ID, n) (SYMBOL, -) (NUM, 1) (SYMBOL, )) (SYMBOL, ;) 
11.	(SYMBOL, }) 
13.	(KEYWORD, void) (ID, main) (SYMBOL, () (KEYWORD, void) (SYMBOL, )) (SYMBOL, {) 
14.	(ID, a) (SYMBOL, =) (NUM, 5) (SYMBOL, ;) 
15.	(KEYWORD, switch) (SYMBOL, () (ID, fibonachi) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, )) (SYMBOL, {) 
16.	(KEYWORD, case) (NUM, 1) (SYMBOL, :) (NUM, 1) (SYMBOL, ;) 
17.	(KEYWORD, case) (NUM, 2) (SYMBOL, :) (SYMBOL, {) 
18.	(ID, output) (SYMBOL, () (NUM, 2) (SYMBOL, )) (SYMBOL, ;) 
19.	(SYMBOL, }) 
20.	(KEYWORD, case) (NUM, 3) (SYMBOL, :) (NUM, 3) (SYMBOL, ;) 
21.	(KEYWORD, case) (NUM, 5) (SYMBOL, :) (NUM, 4) (SYMBOL, ;) 
22.	(KEYWORD, default) (SYMBOL, :) (ID, exit) (SYMBOL, () (SYMBOL, )) (SYMBOL, ;) 
23.	(SYMBOL, }) 
25.	(KEYWORD, switch) (SYMBOL, () (ID, fibonachi) (SYMBOL, () (ID, a) (SYMBOL, )) (SYMBOL, )) (SYMBOL, {) 
26.	(KEYWORD, case) (NUM, 1) (SYMBOL, :) (NUM, 1) (SYMBOL, ;) 
27.	(KEYWORD, case) (NUM, 2) (SYMBOL, :) (SYMBOL, ;) 
28.	(SYMBOL, }) 
29.	(SYMBOL, }) 
